* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  html,
  body {
    height: 100vh;
  }
  
  body {
    background-color: #7159c1;
    font-family: Roboto, Arial, sans-serif;
  }
  
  section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  
  h1 {
    font-size: 32px;
    letter-spacing: 1px;
    margin: 20px 0;
    color: white;
  }
  
  form {
    margin: 20px 0;
    background-color: white;
    padding: 30px 25px;
    border-radius: 5px;
  }
  
  form .input-block {
    margin-bottom: 20px;
  }
  
  form .input-block label {
    font-size: 14px;
    color: darkslateblue;
  }
  
  form .input-block input {
    width: 100%;
    display: block;
    margin-top: 8px;
    padding: 7px;
    font-size: 16px;
    color: #7159c1;
    border-radius: 2px;
    border: 1px solid #ccddef;
    outline-color: #7159c1;
  }
  
  form .btn-login {
    display: block;
    min-width: 120px;
    border: none;
    background-color: #7159c1;
    color: white;
    border-radius: 25px;
    margin: auto;
    padding: 7px;
  }
  
  /* APARIÇÃO DOs CAMPOS */
  
  form {
    overflow: hidden;
    animation: fade 0.2s; /* Integrando o efeito construído no desafio anterior. */
  }

  form .input-block:nth-child(1) {
    animation-name: move;
    animation-duration: 500ms; /* ms significa milisegundos, ou seja, 1s = 1000ms*/
  }

  form .input-block:nth-child(2) {
    animation: move 400ms; /* Ao usar a propriedade animation é possível definir mais de uma propriedade, como é o exemplo ao lado já q o duration está setado nela tbm*/
    animation-delay: 100ms; /* Delay é demora. */
    animation-fill-mode: backwards; /* Essa propriedade serve para dizer qual será o estado da classe ao iniciar ou após a execução, ou seja, como foi setado ali embaixo que a posição inicial seria -35% ele toma como base essa posição, ao invés de inicial em 0, depois ir para -35% e chegar em 0 após a animação. */
  }

  form .btn-login {
    animation: move 400ms;
    animation-delay: 250ms;
    animation-fill-mode: backwards;
  }
  
  @keyframes move {
    from {
      opacity: 0;
      transform: translateX(-35%);
    }
    to {
      opacity: 1;
      transform: translateX(0%);
    }
  }

  @keyframes fade {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }